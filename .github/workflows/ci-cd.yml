name: CI/CD Pipeline

on:
  push:
    branches:
      - Bug_TK012  # testing on Bug_TK012
  pull_request:
    types: [closed]
    branches:
      - Bug_TK012

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      - name: Build and push frontend image
        run: |
          docker build --build-arg CACHE_BUST=$(date +%s) -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      - name: Run backend tests (optional)
        run: |
          cd backend
          dotnet test || true

  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 Host to Known Hosts
        run: |
          ssh-keyscan -H 18.204.197.22 >> ~/.ssh/known_hosts

      - name: Deploy to EC2 Instance
        run: |
          ssh ubuntu@18.204.197.22 << 'EOF'
            cd ~/hello-world-deployment
            git reset --hard HEAD
            git clean -fd
            git pull origin Bug_TK012

            docker compose down
            docker compose pull
            docker compose up -d

            docker ps --format "table {{.Names}}\t{{.Image}}\t{{.RunningFor}}"
          EOF
