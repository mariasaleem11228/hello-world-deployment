name: CI/CD Pipeline with Auto Rollback

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      VERSION: v1.0.${{ github.run_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ env.VERSION }} ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ env.VERSION }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.VERSION }} ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.VERSION }}

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 Host to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy and Verify
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << "EOF"
            cd ~/hello-world-deployment
            git fetch origin
            git reset --hard origin/main
            git clean -fd

            # Update docker-compose image tags
            sed -i "s|image:.*backend.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ env.VERSION }}|" docker-compose.yml
            sed -i "s|image:.*frontend.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ env.VERSION }}|" docker-compose.yml

            docker compose down
            docker compose pull
            docker compose up -d

            echo "Waiting 20s for containers to stabilize..."
            sleep 20

            BACKEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/helloworld || echo 000)
            FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost || echo 000)

            if [ "$BACKEND_STATUS" != "200" ] || [ "$FRONTEND_STATUS" != "200" ]; then
              echo "❌ Health check failed. Rolling back to previous version..."
              PREV_VERSION=$(docker images | grep backend | awk 'NR==2{print $2}')
              sed -i "s|${{ env.VERSION }}|$PREV_VERSION|g" docker-compose.yml

              docker compose down
              docker compose pull
              docker compose up -d

              echo "✅ Rolled back to $PREV_VERSION"
            else
              echo "✅ Deployment succeeded"
            fi
          EOF
